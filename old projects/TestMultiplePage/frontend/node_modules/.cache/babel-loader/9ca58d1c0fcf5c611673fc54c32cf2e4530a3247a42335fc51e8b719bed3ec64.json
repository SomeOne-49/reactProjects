{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programming\\\\ReactCourse\\\\TestMultiplePage\\\\frontend\\\\src\\\\pages\\\\NewEvent.js\";\nimport { json } from \"react-router-dom\";\nimport EventForm from \"../components/EventForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NewEventPage() {\n  return /*#__PURE__*/_jsxDEV(EventForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 10\n  }, this);\n}\n_c = NewEventPage;\nexport async function NewEventAction(_ref) {\n  let {\n    request,\n    params\n  } = _ref;\n  const data = request.formData();\n  data.get(\"title\");\n  const eventData = {\n    title: data.get(\"title\"),\n    image: data.get(\"image\"),\n    date: data.get(\"date\"),\n    description: data.get(\"description\")\n  };\n  const response = await fetch(\"http://localhost:8080/events\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(eventData)\n  });\n  if (!response.ok) {\n    throw json(\"Could not save event data.\");\n  }\n}\n_c2 = NewEventAction;\nvar _c, _c2;\n$RefreshReg$(_c, \"NewEventPage\");\n$RefreshReg$(_c2, \"NewEventAction\");","map":{"version":3,"names":["json","EventForm","jsxDEV","_jsxDEV","NewEventPage","fileName","_jsxFileName","lineNumber","columnNumber","_c","NewEventAction","_ref","request","params","data","formData","get","eventData","title","image","date","description","response","fetch","method","headers","body","JSON","stringify","ok","_c2","$RefreshReg$"],"sources":["D:/Programming/ReactCourse/TestMultiplePage/frontend/src/pages/NewEvent.js"],"sourcesContent":["import { json } from \"react-router-dom\";\r\nimport EventForm from \"../components/EventForm\";\r\nexport default function NewEventPage() {\r\n  return <EventForm />;\r\n}\r\n\r\nexport async function NewEventAction({ request, params }) {\r\n  const data = request.formData();\r\n  data.get(\"title\");\r\n  const eventData = {\r\n    title: data.get(\"title\"),\r\n    image: data.get(\"image\"),\r\n    date: data.get(\"date\"),\r\n    description: data.get(\"description\"),\r\n  };\r\n  const response = await fetch(\"http://localhost:8080/events\", {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(eventData),\r\n  });\r\n  if (!response.ok) {\r\n    throw json(\"Could not save event data.\");\r\n  }\r\n}\r\n"],"mappings":";AAAA,SAASA,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAChD,eAAe,SAASC,YAAYA,CAAA,EAAG;EACrC,oBAAOD,OAAA,CAACF,SAAS;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACtB;AAACC,EAAA,GAFuBL,YAAY;AAIpC,OAAO,eAAeM,cAAcA,CAAAC,IAAA,EAAsB;EAAA,IAArB;IAAEC,OAAO;IAAEC;EAAO,CAAC,GAAAF,IAAA;EACtD,MAAMG,IAAI,GAAGF,OAAO,CAACG,QAAQ,CAAC,CAAC;EAC/BD,IAAI,CAACE,GAAG,CAAC,OAAO,CAAC;EACjB,MAAMC,SAAS,GAAG;IAChBC,KAAK,EAAEJ,IAAI,CAACE,GAAG,CAAC,OAAO,CAAC;IACxBG,KAAK,EAAEL,IAAI,CAACE,GAAG,CAAC,OAAO,CAAC;IACxBI,IAAI,EAAEN,IAAI,CAACE,GAAG,CAAC,MAAM,CAAC;IACtBK,WAAW,EAAEP,IAAI,CAACE,GAAG,CAAC,aAAa;EACrC,CAAC;EACD,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;IAC3DC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,cAAc,EAAE;IAClB,CAAC;IACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACX,SAAS;EAChC,CAAC,CAAC;EACF,IAAI,CAACK,QAAQ,CAACO,EAAE,EAAE;IAChB,MAAM7B,IAAI,CAAC,4BAA4B,CAAC;EAC1C;AACF;AAAC8B,GAAA,GAnBqBpB,cAAc;AAAA,IAAAD,EAAA,EAAAqB,GAAA;AAAAC,YAAA,CAAAtB,EAAA;AAAAsB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}