{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programming\\\\ReactCourse\\\\TestMultiplePage\\\\frontend\\\\src\\\\components\\\\EventForm.js\",\n  _s = $RefreshSig$();\nimport { useNavigate, Form, useNavigation, useActionData, json, redirect } from \"react-router-dom\";\nimport classes from \"./EventForm.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventForm(_ref) {\n  _s();\n  let {\n    method,\n    event\n  } = _ref;\n  let title, image, date, description;\n  if (event) {\n    ({\n      title,\n      image,\n      date,\n      description\n    } = event);\n  }\n  const actionData = useActionData();\n  const navigationn = useNavigation();\n  const isSubmiting = navigationn.state === \"submiting\";\n  const navigate = useNavigate();\n  function cancelHandler() {\n    navigate(\"..\");\n  }\n  return /*#__PURE__*/_jsxDEV(Form, {\n    method: \"post\",\n    className: classes.form,\n    children: [actionData && actionData.errors && /*#__PURE__*/_jsxDEV(\"ul\", {\n      style: {\n        color: \"#e91e63\"\n      },\n      children: Object.values(actionData.errors).map(el => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: el\n      }, el, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"title\",\n        children: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"title\",\n        type: \"text\",\n        name: \"title\"\n        // required\n        ,\n        defaultValue: title ? title : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"image\",\n        children: \"Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"image\",\n        type: \"url\",\n        name: \"image\"\n        // required\n        ,\n        defaultValue: image ? image : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"date\",\n        children: \"Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"date\",\n        type: \"date\",\n        name: \"date\"\n        // required\n        ,\n        defaultValue: date ? date : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"description\",\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"description\",\n        name: \"description\",\n        rows: \"5\"\n        // required\n        ,\n        defaultValue: description ? description : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: cancelHandler,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: isSubmiting,\n        children: isSubmiting ? \"Submiting\" : \"Save\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(EventForm, \"BSYAMzKsUglq0eeDXRbduyFkCwc=\", false, function () {\n  return [useActionData, useNavigation, useNavigate];\n});\n_c = EventForm;\nexport default EventForm;\nexport async function EventActions(_ref2) {\n  let {\n    request,\n    params\n  } = _ref2;\n  const method = request.method;\n  const id = params.id;\n  const data = await request.formData();\n  const eventData = {\n    title: data.get(\"title\"),\n    image: data.get(\"image\"),\n    date: data.get(\"date\"),\n    description: data.get(\"description\")\n  };\n  let url = \"http://localhost:8080/events\";\n  if (method === \"PATCH\") {\n    url = \"http://localhost:8080/events/\" + id;\n  }\n  const response = await fetch(url, {\n    method: method,\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(eventData)\n  });\n  if (response.status === 422) {\n    return response;\n  }\n  if (!response.ok) {\n    throw json(\"Could not save event data.\", {\n      status: 500\n    });\n  }\n  return redirect(\"/events\");\n}\n_c2 = EventActions;\nvar _c, _c2;\n$RefreshReg$(_c, \"EventForm\");\n$RefreshReg$(_c2, \"EventActions\");","map":{"version":3,"names":["useNavigate","Form","useNavigation","useActionData","json","redirect","classes","jsxDEV","_jsxDEV","EventForm","_ref","_s","method","event","title","image","date","description","actionData","navigationn","isSubmiting","state","navigate","cancelHandler","className","form","children","errors","style","color","Object","values","map","el","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","type","name","defaultValue","rows","actions","onClick","disabled","_c","EventActions","_ref2","request","params","data","formData","eventData","get","url","response","fetch","headers","body","JSON","stringify","status","ok","_c2","$RefreshReg$"],"sources":["D:/Programming/ReactCourse/TestMultiplePage/frontend/src/components/EventForm.js"],"sourcesContent":["import {\n  useNavigate,\n  Form,\n  useNavigation,\n  useActionData,\n  json,\n  redirect,\n} from \"react-router-dom\";\n\nimport classes from \"./EventForm.module.css\";\n\nfunction EventForm({ method, event }) {\n  let title, image, date, description;\n  if (event) {\n    ({ title, image, date, description } = event);\n  }\n\n  const actionData = useActionData();\n  const navigationn = useNavigation();\n  const isSubmiting = navigationn.state === \"submiting\";\n\n  const navigate = useNavigate();\n  function cancelHandler() {\n    navigate(\"..\");\n  }\n\n  return (\n    <Form method=\"post\" className={classes.form}>\n      {actionData && actionData.errors && (\n        <ul style={{ color: \"#e91e63\" }}>\n          {Object.values(actionData.errors).map((el) => (\n            <li key={el}>{el}</li>\n          ))}\n        </ul>\n      )}\n      <p>\n        <label htmlFor=\"title\">Title</label>\n        <input\n          id=\"title\"\n          type=\"text\"\n          name=\"title\"\n          // required\n          defaultValue={title ? title : \"\"}\n        />\n      </p>\n      <p>\n        <label htmlFor=\"image\">Image</label>\n        <input\n          id=\"image\"\n          type=\"url\"\n          name=\"image\"\n          // required\n          defaultValue={image ? image : \"\"}\n        />\n      </p>\n      <p>\n        <label htmlFor=\"date\">Date</label>\n        <input\n          id=\"date\"\n          type=\"date\"\n          name=\"date\"\n          // required\n          defaultValue={date ? date : \"\"}\n        />\n      </p>\n      <p>\n        <label htmlFor=\"description\">Description</label>\n        <textarea\n          id=\"description\"\n          name=\"description\"\n          rows=\"5\"\n          // required\n          defaultValue={description ? description : \"\"}\n        />\n      </p>\n      <div className={classes.actions}>\n        <button type=\"button\" onClick={cancelHandler}>\n          Cancel\n        </button>\n        <button type=\"submit\" disabled={isSubmiting}>\n          {isSubmiting ? \"Submiting\" : \"Save\"}\n        </button>\n      </div>\n    </Form>\n  );\n}\n\nexport default EventForm;\n\nexport async function EventActions({ request, params }) {\n  const method = request.method;\n  const id = params.id;\n  \n  const data = await request.formData();\n  const eventData = {\n    title: data.get(\"title\"),\n    image: data.get(\"image\"),\n    date: data.get(\"date\"),\n    description: data.get(\"description\"),\n  };\n\n  let url = \"http://localhost:8080/events\";\n\n  if (method === \"PATCH\") {\n    url = \"http://localhost:8080/events/\" + id;\n  }\n\n  const response = await fetch(url, {\n    method: method,\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n    body: JSON.stringify(eventData),\n  });\n\n  if (response.status === 422) {\n    return response;\n  }\n  if (!response.ok) {\n    throw json(\"Could not save event data.\", { status: 500 });\n  }\n\n  return redirect(\"/events\");\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}